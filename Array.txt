public class A{ //remove reapted elements in an array
static public void main(String [] args){

int x[]= {1,2,3,4,5,6,6,7};
int [] temp= new int [x.length-1];
int j=0;
for(int i=0;i<x.lenght-1;i++){
if(x[i]!=x[i+1]){
temp[j]= x[i];
j++;

}
}
temp[j]=x[x.lenght-1];
for(int i=0;i<x.lenght-1;i++){
System.out.println(temp[i]);
}
}}
/////////////////////////////////
package p1;

import java.util.Arrays;
import java.util.Scanner;



public class A {
	    public static void main(String[] args) {
	    	int arr [] = {34,56,7,65,2,3,3,4,1,66,78,66,99,89,76,56,90,90,3,3,3};
	    	
	    	int [] removeduplicatre =Arrays.stream(arr).distinct().sorted().toArray();
	    	System.out.println("Original array  values.."+Arrays.toString(arr));
	    	System.out.println("After remove duplicate selements.."+Arrays.toString(removeduplicatre));
	    	int overallsum =0;
	    	for (int i = 0; i < removeduplicatre.length; i++) {
	    		overallsum+=removeduplicatre[i];
				
			}
	    	System.out.println("OverallSum:"+overallsum);
	    }
	    	int overallsum =0;
	    	for (int i = 0; i < removeduplicatre.length; i++) {
	    		overallsum+=removeduplicatre[i];
	    		System.out.println("OverallSum:"+overallsum);
			}
	    
	    
	    short overallsumarr =0;
	    	for (int j = 0; j < arr.length; j++) {
	    		overallsumarr+=arr[j];
	    		System.out.println("OverallSum:"+overallsumarr);
	    
	    	double average =(double)overallsum/arr.length;
	    	double ave =(double)overallsum/removeduplicatre.length;
	    	System.out.println(average);
	    	System.out.println(ave);
	    

}}}

	
	    
}


//	    	System.out.println("Beforing sorting:"+Arrays.toString(arr));
//	    	int f;
//	    	for (int j = 0; j < arr.length-1; j++) {
//	    		for (int i = 0; i < arr.length-1; i++) {
//	    			if(arr[i]>arr[i+1]) {
//	    			f=arr[i];
//	    			arr[i]=arr[i+1];
//	    			arr[i+1]=f;
//					
//				}
//	    		}
//			}
//	    	System.out.println("After sorting :"+Arrays.toString(arr));
//	    	
//	    	Arrays.sort(arr);
//	    	int[] removeduplicates= Arrays.stream(arr).distinct().toArray();
//	    	
//	    	System.out.println("After sorting & Removing duplicates:"+Arrays.toString(removeduplicates));
//	    	





////////////////////////////////
package p1;

import java.util.Arrays;
import java.util.Scanner;



public class A {
	    public static void main(String[] args) {
	        int arr[] = {22,56,22,2, 4, 5, 6, 6, 7, 8, 9, 5};
	        System.out.println("Original array: " + Arrays.toString(arr));
	        int[] distinctArray = Arrays.stream(arr).distinct().sorted().toArray();
	        System.out.println("After Removing duplicate Elements & Sorting array: " + 
	        Arrays.toString(distinctArray));
	        int n=arr.length;
	        Arrays.sort(arr);
	        //Find firstmax & firstmin
	        int firstmax =arr[n-2];
	        int firstmin =arr[1];
	        System.out.println(firstmax+","+firstmin);
	    }
	

}


/////////////////////////////////
public class A{//array sorting
public static void main (String[] args){
int x[]={30,40,60,10,90};
System.out.println("Before sorting ...."+Arrays.toString(x));
int temp;
for(int j=0;j<x.length-1;j++){

for(int i=0;i<x.lenght-1;i++){

if(x[i]>x[i+1]){
temp=x[i];
x[i]=x[i+1];
x[i+1]=temp;
}}

}
System.out.println("After sorting ...."+Arrays.toString(x));
}}
/////////////////////////////////////////

Remove duplicate elements along with array sorting
package p1;

import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;

public class A {
public static void main(String[] args) {
	int x[] = {2,45,45,67,3,5,6,6,78,90,12,12,3};
	System.out.println("Before Sorting.."+Arrays.toString(x));

	int z;
	for (int j = 0; j < x.length-1; j++) {
		for (int i = 0; i < x.length-1; i++) {
			if(x[i]>x[i+1]) {
				z=x[i];
				x[i]=x[i+1];
				x[i+1]=z;
				
				}
					
				}
	}
	System.out.println("After Sorting..."+Arrays.toString(x));
	 Arrays.sort(x);
     //System.out.println("After Sorting..."+Arrays.toString(x));

     int[] unique = Arrays.stream(x).distinct().toArray();
     System.out.println("After Removing Duplicates..."+Arrays.toString(unique));
 

	// Remove duplicates
//	int[] unique = new int[x.length];
//	int j = 0;
//	unique[j] = x[0];
//	for (int i = 1; i < x.length; i++) {
//	    if (x[i] != x[i-1]) {
//	        j++;
//	        unique[j] = x[i];
//	    }
//	}
//	int[] sortedUnique = Arrays.copyOf(unique, j+1);
//	System.out.println("After Removing Duplicates..."+Arrays.toString(sortedUnique));

}
}
package p1;

import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;

public class A {
public static void main(String[] args) {
	int x[] = {2,45,45,67,3,5,6,6,78,90,12,12,3};
	System.out.println("Before Sorting.."+Arrays.toString(x));

	int z;
	for (int j = 0; j < x.length-1; j++) {
		for (int i = 0; i < x.length-1; i++) {
			if(x[i]>x[i+1]) {
				z=x[i];
				x[i]=x[i+1];
				x[i+1]=z;
				
				}
					
				}
	}
	System.out.println("After Sorting..."+Arrays.toString(x));
	Arrays.sort(x);
	int [] unique = Arrays.stream(x).distinct().toArray();
	System.out.println("After sorting and remove duplicate elements..."+Arrays.toString(unique));

//	Before Sorting..[2, 45, 45, 67, 3, 5, 6, 6, 78, 90, 12, 12, 3]
//			After Sorting...[2, 3, 3, 5, 6, 6, 12, 12, 45, 45, 67, 78, 90]
//			After sorting and remove duplicate elements...[2, 3, 5, 6, 12, 45, 67, 78, 90]


}
}




///////////////////////////////////////
package p1;

public class G {
	public static void main(String[] args) {
		
	
String str []= {"farooq","cat","monkey"};


for (int i = 0; i < str.length; i++) {
	String s = str[i].toUpperCase();

	System.out.println(s);
	
	
}
System.out.println();
System.out.println(str.length);
for (String string : str) {
	System.out.println(string);
}
}
}
FAROOQ
CAT
MONKEY

3
farooq
cat
monkey
package p1;

import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;

public class A {
public static void main(String[] args) {
	String str [] = {"farooq","Sharmila","Siva"};
	
	for (int i = 0; i < str.length; i++) {
		
		
//		boolean startsWith = str[i].startsWith("f");
//		System.out.println(startsWith);
//		boolean endsWith = str[i].endsWith("a");
//		System.out.println(endsWith);
		
//		String upperCase = str[i].toUpperCase();
//		//System.out.println(upperCase);
//		
//	String lowerCase = str[i].toLowerCase();
//	System.out.println(lowerCase);
//	
//	System.out.println(str.length);
//	for (String string : str) {
//		System.out.println(string);
		
	//}
}
}
}
true
false
FAROOQ
farooq
3
farooq
Sharmila
Siva
false
true
SHARMILA
sharmila
3
farooq
Sharmila
Siva
false
true
SIVA
siva
3
farooq
Sharmila
Siva


///////////////////////////////////////
public class A{//Find largest and smallest or Find max and min 
public static void main(String[] args){
int x[]={10,1,200,20,30,699};
int max=0;
int min=0;
for(int i=1;i<x.length;i++){
if(x[i]>max){
max=x[i];
System.out.print("Print max number..."+max);
}else if (x[i]<min){
min=x[i];
System.out.print("Print min number..."+min);

}}

}
/////////////////////////////////
package p1;

import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;

public class A {
public static void main(String[] args) {
	int x[]= {12,4,56,78,90,9,34,56,34,12,4,3,5,3,5,2,4,1,};
	int n= x.length;
	Arrays.sort(x);
	//Firstmax & Firstmin elements
	int Firstmax =x[n-1];
	int Firstmin=x[0];
	System.out.println(Firstmax+","+Firstmin);
	//Secondmax & Secondmin
	int Secondmax =x[n-2];
	int Secondmin=x[1];
	System.out.println(Secondmax+","+Secondmin);
	//Thirdmax & Thirdmin
	int Thirdmax =x[n-3];
	int Thirdmin=x[2];
	System.out.println(Thirdmax+","+Thirdmin);
}
}


/////////////////////////////////
package p1;
@FunctionalInterface
 interface Evenodd {
 void check (int i);
	 
 }

public class K{
	public static void main(String[] args) {
		Evenodd  evenodd= (i)->{if(i%2==0)
		{System.out.println("Number.."+i+".is Even");
		 }else {
			 System.out.println("Number"+i+"is Odd"); 
		 }
	};
	evenodd.check(107);
}
}
////////////////////////////////
package P1;

import java.util.Scanner;

public class A {
	public static void main(String[] args) {
	
package p1;



	public class A {
		public static void main(String[] args) {
			
		
		int[] x = {2, 7, 3, 13, 22, 5, 9,21,4,1};



		int largest = Integer.MIN_VALUE;
		int secondLargest = Integer.MIN_VALUE;
		int thirdlargest =Integer.MIN_VALUE;
		int smallest = Integer.MAX_VALUE;
		int secondSmallest =Integer.MAX_VALUE;
		int thirdsmallest=Integer.MAX_VALUE;;
		{
			
		for (int i = 0; i < x.length; i++) {
			
		    if (x[i] > largest) {
		        secondLargest = largest;
		        largest = x[i];
		        
			} else if (x[i] > secondLargest ) {
				thirdlargest=secondLargest;
		        secondLargest = x[i];
		    
		    
		} else if (x[i] > thirdlargest ) {
	       x[i]=thirdlargest;
	       
	       
	    }
		    if (x[i] < smallest) {
		        secondSmallest = smallest;
		        smallest = x[i];
		        
		        
			} else if (x[i] < secondSmallest ) {
				thirdsmallest=secondSmallest;
			
		        secondSmallest = x[i];
		    }
			else if (x[i] < thirdsmallest ) {
		        x[i]=thirdsmallest;
		}
		}
		System.out.print("First smallest&Largest number is: " +largest+","+smallest );
		System.out.println();
		System.out.print("Second largest&Smallest number is: " + secondLargest+","+secondSmallest);
	System.out.println();
		System.out.println("Third smallest & Largest number is:"+thirdlargest+","+thirdsmallest);
		       
		}}}

////////////////////////////////
public class A { Reverse A Given number or Palindrom
	 public static void main(String[] args) {
	  int x = 1234;
	  int y = 0;
	  int temp = 0;

	  while(x > 0) {
	   temp = x % 10;
	   y = y * 10 + temp;
	   x = x / 10;
	  }
	  System.out.println("Reversed Number is: " + y);
	 }
	}
//////////////////////////////////////
package p1;

import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;

public class A {
public static void main(String[] args) {
	
	//Reverse a string
	String str  = "Chilakala farooq";
	
	StringBuilder stringBuilder = new StringBuilder(str).reverse();
	System.out.println(stringBuilder);
	//qooraf alakalihC
	}

}
////////////////////////////////////////
public class A { //Reverse a given string

public static void main(String[] args){

String str= "Farooq is a FullStock Developer";
for(int i=str.lenght()-1;i>=0;i--){
System.out.println(str.CharAt(i));
}}}
/////////////////////////////////////

public class B {//Find the size of the  array

public static void main(String[] args) {
String str= "Farooq is a FullStock Developer    ";
System.out.print(str.length());
}

}//35
////////////////////////////////////////
//Reverse a string
	String str  = "Chilakala farooq   ";
	StringBuilder stringBuilder = new StringBuilder(str).reverse();
	System.out.println(stringBuilder);
	System.out.println(str.length());
	
	String[] words = new StringBuilder(str.trim()).reverse().toString().split("\\s+");
    for (String word : words) {
        System.out.println(word);
        System.out.println(word.length());
    }
   
	

///////////////////////////////////////

public class B {//Remove white space by using trim()

public static void main(String[] args) {
String str= "Farooq is a FullStock Developer                   ";
String[] s = str.trim().split("");
System.out.println(s.length);
}

}//31
//////////////////////////////////////////////
public class B {

public static void main(String[] args) {
String str= "Farooq is a FullStock Developer                   ";
String[] s = str.trim().split("");
System.out.println(s.length);
for (String x : s) {//Using foreach loop we print the data present in string
	System.out.print(x);
	
}
}

}/// Farooq is a FullStock Developer
////////////////////////////////////////////
public class B {

public static void main(String[] args) {
	

String str= "Farooq is a FullStock Developer                   ";
System.out.println( str.toLowerCase());//print only lowercase///farooq is a fullstock developer                   

System.out.println(str.toUpperCase());//ptint only upper case//FAROOQ IS A FULLSTOCK DEVELOPER 
}
}
//////////////////////////////////////////////////
package p1;

//write a  java code to remove duplicate elements in string


package p1;

//write a  java code to remove duplicate elements in string


public class RemoveDuplicates {
 
    public static void main(String[] args) {
 
        String str = "Java is great";
 
        String result = "";
 
      //This array will hold all characters that we already saw.
       boolean [] r = new boolean [300]; 
        for (int i = 0; i <str.length(); i++) {
        	char c=str.charAt(i);
        	//Check if we already saw this character.
        	if (!r[c]) {
				
        		 //If we didn't, add it to the result.
        	result +=c;
        	//And mark it as seen.
        	r[c]=true;
			
		}}
        System.out.print(result);
    }
}

/////////////////////////////////////////////////

public class B {

public static void main(String[] args) {
	

String str= "Farooq is a FullStock Developer                   ";
System.out.println( str.startsWith("F"));
System.out.println( str.startsWith("a"));
System.out.println(str.endsWith("r"));
System.out.println(str.endsWith("e"));
}
}
////////////////////////////////////

public class A{
public static void main(String[] args){

int [] x= {2,33,5,6,7,88,9,2,1,3,0};
int [] temp = new int [x.length];
for(int i=0;i<x.lenght-1;i++){

if(x[i]%2!=0){
System.out.print(x[i]);

}
 else if(x[i]%2==0){
System.out.print(x[i]);

}}
}}


//////////////////////////////////////////
public class A{ Prime number
public static void main(String[] args){

int x;
boolean isprime;
x=13;
if(x<2)
isprime=false;
else 
isprime=true;
for(int i=2;i<x/i;i++){
if(x%i==0){
isprime=false;
break;
}}
if(isprime)
System.out.println("prime");
else
System.out.println("Not prime");

}}

		(OR)
//a prime number is a number that is only divisible by 1 and itself.

public class A{
public static void main(String...x){

Scanner scan = new Scanner (System.in);
System.out.Println("Enter number");
int  n = scan.next();
if(n==1)
System.out.println("is not prime"+n);
}
else if(n==2)
System.out.println("is  prime"+n);
}
else if(n%2==0||n%3==0||n%5==0||n%7==0)
System.out.println("is not prime"+n);
}
else{
System.out.println("is  prime"+n);
}}
}}
/////////////////////////////////////////////
public class A {
public static void main(String[] args) {



	//Prime number 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,
	//37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 
Scanner Scan = new Scanner (System.in);
System.out.println("Enter a number...");
int n = Scan.nextInt();
if(n==1) {
	System.out.println(n+"...is not prime");
}
else if (n==2) {
	System.out.println(n+"....is prime");
	
}
//if n is divisible by 2, 3, 5, or 7. If n is divisible by any of these numbers,
//the program prints the message "n...is not prime".
else if (n%2==0||n%4==0||n%5==0||n%7==0) {
	System.out.println(n+"...is not prime");
}

else {
	System.out.println(n+".......is prime");
}
}
}
/////////////////////////////////////////////
public class A{
public static void main(String...x){

int x = 123456789;
int sum=0
while(x>0){
sum=sum+x%10;
x=x/10;
System.out.print(sum)
}


}}
////////////////////////////////
package p1;

import java.util.Scanner;

public class B{///swapping a given numbers
	public static void main(String[] args) {

		int a=10;
		int b =20;
		int c;
		System.out.println("before swap");
		System.out.println(a+"...."  +b);


		/*a=a+b;
		b=a-b;
		a=a-b;
		
		a=a*b;
		b=a/b;
		a=a/b;*/
		c=a;
		a=b;
		b=c;
		System.out.println("after swap");
		System.out.print(a+" ...... "+b);
		
	}
}
/////////////////////////////////////////////////

An Armstrong number of three digits is an integer such that the sum of the cubes of its digits is equal to the number itself. For example 153

package p1;

import java.util.Scanner;

public class A {       //Armstrong number

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter  ArmStrong number");
        int i = sc.nextInt();
        int sum = 0;
        for(int j = i; j>0 ; j = j/10){
            sum = sum + ((j%10)*(j%10)*(j%10));
        }
        if(sum == i)
            System.out.println(" is Armstrong");
        else
            System.out.println("Not Armstrong");

    }

An Armstrong number is a number such that the sum of its digits raised to the third power is equal to the number
itself.  For example, 371 is an Armstrong number, since 3**3 + 7**3 + 1**3 = 371.
}
//////////////////////////////////////////////////////////
package p1;

import java.util.Scanner;

public class A {/////Fibonacci Series
    public static void main(String[] args){

    	  int maxNumber = 0; 
    	     int previousNumber = 0;
    	     int nextNumber = 1;

    	        System.out.println("How many numbers you want in Fibonacci:");
    	        Scanner scanner = new Scanner(System.in);
    	        maxNumber = scanner.nextInt();
    	        System.out.print("Fibonacci Series of "+maxNumber+" numbers:");

    	        for (int i = 1; i <= maxNumber; ++i)
    	        {
    	            System.out.print(previousNumber+" ");


    	            int sum = previousNumber + nextNumber;
    	            previousNumber = nextNumber;
    	            nextNumber = sum;
    	        }}}

//////////////////////////////////////////////////////////////////
package p1;

import java.util.Scanner;

public class A {
    public static void main(String[] args){

Scanner sc = new Scanner (System.in);
System.out.println("Enter  number");
int n = sc.nextInt();

if(n==1) {
	System.out.println(n+" not prime number");
}
else if(n==2) {
	System.out.println("prime number"+n);
}else if(n%3==0||n%5==0||n%7==0) {
	System.out.println(n+" not prime number");
}else
{
	System.out.println(n+"...is prime");
}
    }}
////////////////////////////////////////////////////////////////
package p1;

import java.util.Scanner;



public class A {
public static void main(String[] args) {

//palidrome number
	Scanner scan = new Scanner
			(System.in)
			;
	System.out.println("Enter a number......");
String input = scan.next();
	if(isPalidrome(input))
		System.out.println(input+"..is palidrome number");
	else 
		System.out.println(input+" ..is not palidrome number...");
}

private static boolean isPalidrome(String input1) {
	String str = new StringBuilder(input1).reverse().toString();
	return input1.equals(str);
}


}


////////////////////////////////////////////////////////////////
package p1;

import java.util.Scanner;



public class A {
public static void main(String[] args) {

//palidrome number
	Scanner scan = new Scanner
			(System.in)
			;
	System.out.println("Enter a number....");
	int input = scan.nextInt();
	if (isPalindrome(input)) 
		System.out.println(input+"...is palidrome number ");
		else 
			System.out.println(input+"...is not palidrome number ");
	}

public static boolean isPalindrome(int n) {
    String str = String.valueOf(n);
    String reversed = new StringBuilder(str).reverse().toString();
    return str.equals(reversed);
}

}
//	        Scanner scanner = new Scanner(System.in);
//	        System.out.println("Enter a string:");
//	        String input = scanner.nextLine();
//	        
//	        if (isPalindrome(input)) {
//	            System.out.println(input + " is a palindrome.");
//	        } else {
//	            System.out.println(input + " is not a palindrome.");
//	        }
//	    }
//
//	    public static boolean isPalindrome(String str) {
//	        String reversed = new StringBuilder(str).reverse().toString();
//	        return str.equals(reversed);
//////////////////////////////////////////////////////////////
A palindrome number is a number that is same after reverse.
package p1;

import java.util.Scanner;

public class A {
    public static void main(String[] args){
    		  int r,sum=0,temp;    
    		 
  
    		  Scanner sc = new Scanner(System.in);
    		  System.out.println("Enter palidrom");
    		  int n = sc.nextInt();
    		  temp=n;
    		  while(n>0){    
    		   r=n%10;  //getting remainder  
    		   sum=(sum*10)+r;    
    		   n=n/10;    
    		  }    
    		  if(temp==sum)    
    		   System.out.println("palindrome number ");    
    		  else    
    		   System.out.println("not palindrome");    
    		}  
    		}  
////////////////////////////////////////////////////////////
package p1;
//Factorial function is to count how many ways you can  choose things from a collection of things

import java.util.Scanner;

public class A {//Factorial in java n product of all positive desending integers.
public static void main(String[] args) {

int num;
int factorial=1;//Two variables are storing the 2 integer type variable.
Scanner scan = new Scanner (System.in);
System.out.println("Enter a number:");
num = scan.nextInt();
for (int i = 1; i <=num; i++) {
	factorial=factorial*i;// This condition calculate the factorial taking one value of "i" at a time within the loop and storing them back in the factoial
	
}
System.out.println("factorial....."+factorial);
}
}
Output
Enter a number:
5
factorial.....120
Enter a number:
8
factorial.....40320
//////////////////////////////////////////////
package p1;

import java.util.Scanner;



public class A {
public static void main(String[] args) {

//Factorial number
	Scanner scan = new Scanner
			(System.in)
			;
	System.out.println("Enter a number......");
	int number,factorial=1;
	number =scan.nextInt();
	for (int i = 1; i <=number; i++) {
		factorial=factorial*i;		
	}
	System.out.println(factorial);
}

}
/////////////////////////////////////////////
package p1;

import java.util.Scanner;

public class A {// Multiplation table program
	
	public static void main(String[] args) {
		Scanner sc = new Scanner (System.in);
		System.out.println("Enter number:");
		int n= sc.nextInt();
		for (int i = 1; i <=10; i++) {
			
			System.out.println(n+"*"+i+"="+n*i);
			}
			}
			}

Output
Enter number:             
90
90*1=90
90*2=180
90*3=270
90*4=360
90*5=450
90*6=540
90*7=630
90*8=720
90*9=810
90*10=900     
Enter number:
8
8*1=8
8*2=16
8*3=24
8*4=32
8*5=40
8*6=48
8*7=56
8*8=64
8*9=72
8*10=80
       
////////////////////////////////////////
package p1;

public class F {
public static void main(String[] args) {
	
	for (int i=0;i<6;i++) {
		for (int j=0;j<6;j++) {
			if(i==0&&j==0) {
				System.out.println("1");
			}if(i==1&&j==1) {
				System.out.println("12");
		}if(i==2&&j==2) {
			System.out.println("123");
		}
		if(i==3&&j==3) {
			System.out.println("1234");
			{
				if(i==4&&j==5) {
					System.out.println("12345");
			}}
			System.out.println();
			}}}
for (int i=0;i<5;i++) {
	for (int j=0;j<5;j++) {
		System.out.print("1");
}
System.out.print("\n");}

for (int i=0;i<5;i++) {
	for (int j=0;j<5;j++) {
if(i==1&&j==0||i==1&&j==4
			||i==2&&j==0||i==2&&j==2||i==2&&j==4) {
	System.out.print("*");	
}
else if (i==3&&j==1||i==3&&j==3||i==4&&j==2) {
	System.out.print("*");
}else
{
	System.out.print(" ");
}
	
}
	System.out.println();

}
	for(int i=0;i<6;i++) {
				for(int j=0;j<6;j++) {
					if(i==0&&j==6||i==0&&j==4 ||i==1&&j==6||i==1&&j==3
							||i==2&&j==2||i==2&&j==6||i==3&&j==6|| i==3&&j==1) {  //**
						System.out.print("*");
					}
					else if ( i==4&&j==0 ||i==4&&j==1 ||i==4&&j==2 
							|| i==4&&j==3 ||i==4&&j==4 ||i==4&&j==5||i==4&&j==6)
					{
						System.out.print("*");
					}else {
						System.out.print(" ");
					}}
					
					System.out.println();
			}
for(int i=0;i<8;i++) {
	for(int j=0;j<8;j++) {
		if(i==0&&j==6||i==0&&j==4 ||i==1&&j==6
				||i==1&&j==3||i==2&&j==2||i==2&&j==6||i==3&&j==6|| i==3&&j==1) {  //**
			System.out.print("*");
		}
		else if ( i==4&&j==0 ||i==4&&j==1 ||i==4&&j==2 
				|| i==4&&j==3 ||i==4&&j==4 ||i==4&&j==5||i==4&&j==6)
		{
			System.out.print("*");
		}else {
			System.out.print(" ");
		}}
		
		System.out.println();
	}
for(int i=0;i<7;i++) {
	for(int j=0;j<7;j++) {
	     if(i==0&&j==0||i==0&&j==1||i==0&&j==4
				||i==0&&j==5||i==1&&j==1
				||i==1&&j==0||i==1&&j==4
				||i==1&&j==5
				||i==1&&j==2||i==1&&j==3
				||i==2&&j==1||i==2&&j==0
				||i==2&&j==4||i==2&&j==5) {
			
			System.out.print("*");
		}
		else if(i==3&&j==0||i==3&&j==1||i==3&&j==2
				||i==3&&j==3||i==3&&j==4||i==3&&j==5
				||i==4&&j==0||i==4&&j==1
				||i==4&&j==4||i==4&&j==5
				||i==5&&j==0
				||i==5&&j==1||i==5&&j==4
				||i==5&&j==5) {
			System.out.print("*");
		}else {
			System.out.print(" ");
		}
	}
	System.out.println();
}
for(int i=0;i<7;i++) {
	for(int j=0;j<7;j++) {
		if(i==0&&j==0||i==0&&j==1||i==0&&j==4
				||i==0&&j==5||i==0&&j==2
				||i==0&&j==3
				||i==1&&j==0||i==1&&j==5
				||i==2&&j==0||i==2&&j==5
				||i==3&&j==0||i==3&&j==5) {
			System.out.print("*");
		}else if(i==4&&j==0||i==4&&j==5
				||i==5&&j==0||i==5&&j==1
				||i==5&&j==2||i==5&&j==3
				||i==5&&j==4||i==5&&j==5) {
			System.out.print("*");
		}
		else {
			System.out.print(" ");
		}

}
	System.out.println();
}for (int i = 0; i <6; i++) {
	for (int j = 0; j < 6; j++) {
		if(i==0&&j==0||i==0&&j==1||i==0&&j==2||i==0&&j==3||i==0&&j==4
				
				||i==1&&j==1||i==1&&j==2||i==1&&j==3||i==1&&j==4
				||i==2&&j==2||i==2&&j==3||i==2&&j==4) {
			System.out.print("*");
		
		
		}else if(i==3&&j==3||i==3&&j==4||i==4&&j==5) {
			System.out.println("*");
		}
		else {
			System.out.print(" ");
		}

}
	System.out.println();
	
}}}
Output
1
12
123
1234

11111
11111
11111
11111
11111
     
*   *
* * *
 * * 
  *  
    * 
   *  
  *   
 *    
******
      *
    * * 
   *  * 
  *   * 
 *    * 
******* 
        
        
        
**  ** 
****** 
**  ** 
****** 
**  ** 
**  ** 
       
****** 
*    * 
*    * 
*    * 
*    * 
****** 
       
***** 
 **** 
  *** 
   **
    *



      

